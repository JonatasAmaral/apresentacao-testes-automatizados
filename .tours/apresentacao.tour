{
  "$schema": "https://aka.ms/codetour-schema",
  "title": "2 - Tour",
  "steps": [
    {
      "title": "Capa",
      "description": "# Casa de ferreiro, espeto de _ferro_\r\n\r\nNão há razão, nem faz sentido montar teste em linguagem diferente daquela na qual está codando.\r\n\r\nAs liguagens contam com libs para realizar testes nelas.\r\n\r\nA mais popular de Javascript é o [`Jest`](https://www.npmjs.com/package/jest).\r\n"
    },
    {
      "file": "funcao.js",
      "description": "Temos que exportar a função para permitir uso no teste",
      "pattern": "^[^\\S\\n]*module\\.exports = eAe;",
      "selection": {
        "start": {
          "line": 5,
          "character": 1
        },
        "end": {
          "line": 5,
          "character": 22
        }
      },
      "title": "Exportar funcionalidade"
    },
    {
      "file": "test.js",
      "description": "Criamos um arquivo `*.test.js`, que será lido pelo Jest",
      "pattern": "^[^\\S\\n]*const \\{ jest: jestReq, test \\} = require\\(\"@jest/globals\"\\);"
    },
    {
      "file": "test.js",
      "description": "Modulo `Jest` já estará disponivel globalmente, não precisando importar.",
      "pattern": "^[^\\S\\n]*const \\{ jest: jestReq \\} = require\\(\"@jest/globals\"\\);",
      "title": "carregar Jest",
      "selection": {
        "start": {
          "line": 1,
          "character": 1
        },
        "end": {
          "line": 1,
          "character": 13
        }
      }
    },
    {
      "file": "test.js",
      "description": "Importamos a funcão a ser testada",
      "pattern": "^[^\\S\\n]*const eAe = require\\(\"\\./funcao\"\\);",
      "title": "Importa funcionalidade"
    },
    {
      "file": "test.js",
      "description": "Criamos um teste com uma descrição clara e identificavel.",
      "pattern": "^[^\\S\\n]*test\\('eAe\\(\\) loga \"E ae mundão!\"', \\(\\) => \\{",
      "selection": {
        "start": {
          "line": 11,
          "character": 1
        },
        "end": {
          "line": 11,
          "character": 33
        }
      },
      "title": "nome do teste"
    },
    {
      "file": "test.js",
      "selection": {
        "start": {
          "line": 11,
          "character": 35
        },
        "end": {
          "line": 11,
          "character": 42
        }
      },
      "description": "Passamos como segundo argumento uma função que executará o teste",
      "title": "teste em si"
    },
    {
      "file": "test.js",
      "pattern": "^[^\\S\\n]*expect\\(.*\\)",
      "description": "Esperamos que a saida do log...",
      "title": "esperamos"
    },
    {
      "file": "test.js",
      "pattern": "toBe\\(.*\\)",
      "description": "... seja \"E ae mundão\"",
      "title": "que seja"
    },
    {
      "file": "test.js",
      "title": "rodar teste",
      "description": "Vamos executar o teste.\r\n\r\n[`npm run test`](command:codetour.sendTextToTerminal?[\"npm run test\"])"
    },
    {
      "file": "funcao.js",
      "pattern": "\"E ae mundão!\"",
      "description": "E se errarmos o log?\r\n\r\n```\r\n\"E ae mundo!\"\r\n```\r\n\r\n---\r\n\r\n[Vamos conferir](command:codetour.sendTextToTerminal?[\"npm run test\"])",
      "title": "Se errarmos",
      "selection": {
        "start": {
          "line": 2,
          "character": 14
        },
        "end": {
          "line": 2,
          "character": 28
        }
      }
    }
  ]
}